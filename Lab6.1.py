'''Задание состоит из двух частей. 
1 часть – написать программу в соответствии со своим вариантом задания. 
Написать 2 варианта формирования (алгоритмический и с помощью функций Питона), сравнив по времени их выполнение.
2 часть – усложнить написанную программу, 
введя по своему усмотрению в условие минимум одно ограничение на характеристики объектов 
(которое будет сокращать количество переборов) и целевую функцию для нахождения оптимального  решения.
Вариант 15. Вывести все четные натуральные числа до n, крайняя левая цифра которых не превышает 5.
'''

import numpy as np
import timeit

def even_a(n):
    result = []
    for i in range(2, n + 1, 2):
        if int(str(i)[0]) <= 5:
            result.append(i)
    return result

def even_f(n):
    even_numbers = np.arange(2, n + 1, 2)
    result = [num for num in even_numbers if int(str(num)[0]) <= 5]
    return result

n = int(input("Введите значение n: "))

res_a = even_a(n)
res_f = even_f(n)

time_a = timeit.timeit('even_a(n)', globals=globals(), number=1000)
time_f = timeit.timeit('even_f(n)', globals=globals(), number=1000)

print(f"Четные натуральные числа до {n}, крайняя левая цифра которых не превышает 5 алгоритмически:")
print(res_a)

print(f"Четные натуральные числа до {n}, крайняя левая цифра которых не превышает 5 функциями:")
print(res_f)

print(f"Время алгоритмического варианта: {time_a:.6f} секунд")
print(f"Время варианта с функциями: {time_f:.6f} секунд")